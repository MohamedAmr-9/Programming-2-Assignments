import tkinter as tk
from tkinter import messagebox
class Loan:
    interest_rates = {
        1: 13.76,
        2: 13.75,
        3: 14.06,
        4: 14.45,
        5: 14.87,
        6: 15.29,
        7: 15.71
    }

    def __init__(self, job, loan_amount, loan_years):
        self.job = job
        self.loan_amount = loan_amount
        self.loan_years = loan_years

    def calc_loan_payment(self):
        if self.loan_years not in Loan.interest_rates:
            messagebox.showerror("Error", "Invalid loan duration. Please choose from 1,2,3,4,5,6 or 7 years.")
            return None
        fixed_interest = Loan.interest_rates[self.loan_years] / 100
        total_interests = self.loan_amount * fixed_interest * self.loan_years
        total_loan = self.loan_amount + total_interests
        monthly_payment = total_loan / (self.loan_years * 12)
        return monthly_payment

def calculate_loan():
    try:
        job = job_entry.get()
        loan_amount = float(loan_amount_entry.get())
        loan_years = int(loan_years_entry.get())
        loan = Loan(job, loan_amount, loan_years)
        monthly_payment = loan.calc_loan_payment()
        if monthly_payment is not None:
            interest_in_one_year = loan_amount * (Loan.interest_rates[loan_years] / 100)
            total_interests = interest_in_one_year * loan_years
            total_loan = loan_amount + total_interests
            result_label.config(text=f"* Interest in one year : {interest_in_one_year} L.E\n"
                                     f"\n"
                                     f"* Total interests : {total_interests} L.E\n"
                                     f"\n"
                                     f"* Total loan : {total_loan} L.E\n"
                                     f"\n"
                                     f"* Your loan monthly payment is : {monthly_payment} L.E\n"
                                     f"\n"
                                     f"Thank You , For dealing with us !")
    except ValueError:
        messagebox.showerror("Error", "Please enter valid loan amount and loan years.")

def clear_inputs():
    job_entry.delete(0, tk.END)
    loan_amount_entry.delete(0, tk.END)
    loan_years_entry.delete(0, tk.END)
    result_label.config(text="")


bank = tk.Tk()
bank.title("Bank Misr - Plan Your Loan Application")
bank.geometry("500x500+450+150")



background_image = tk.PhotoImage(file="BankMisr 2.png")
background_label = tk.Label(bank, image=background_image)
background_label.pack()


tk.Label(bank, text="Welcome to Banque Misr", font=('Arial Rounded MT Bold', 25), ).place(x=60, y=10)
tk.Label(bank, text="Job:", font=('Arial Rounded MT Bold', 12), bg="#871E35",fg="white").place(x=60, y=60)
tk.Label(bank, text="Loan Amount:", font=('Arial Rounded MT Bold', 12), bg="#871E35",fg="white").place(x=60, y=100)
tk.Label(bank, text="Loan Years:", font=('Arial Rounded MT Bold', 12), bg="#871E35",fg="white").place(x=60, y=140)
result_label = tk.Label(bank, text="", font=('Arial Rounded MT Bold', 10), bg="#ffffff", justify="left")
result_label.place(x=50, y=340)


job_entry = tk.Entry(bank)
job_entry.place(x=200, y=60)
loan_amount_entry = tk.Entry(bank)
loan_amount_entry.place(x=200, y=100)
loan_years_entry = tk.Entry(bank)
loan_years_entry.place(x=200, y=140)


calculate_button = tk.Button(bank, text="Calculate", font=('Arial Rounded MT Bold', 10), bg='#03c969', command=calculate_loan)
calculate_button.place(x=150, y=180)
clear_button = tk.Button(bank, text="Clear",font=('Arial Rounded MT Bold', 10), bg='#9c9fa3', command=clear_inputs)
clear_button.place(x=250, y=180)
exit_button = tk.Button(bank, text="Exit",font=('Arial Rounded MT Bold', 10), bg='#de1818', command=bank.destroy)
exit_button.place(x=330, y=180)

bank.mainloop()
